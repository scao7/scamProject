;check quote
(define (quote? item)
	(if(eq? item 'quote) #t #f)
)

(define (replace func lst)
    (define (check obj lst)
        (if (null? (cddr lst))
            (if (eq? (car lst) obj)
                (cadr lst)
                obj
            )
            (if (eq? (car lst) obj)
                (cadr lst)
                (check obj (cddr lst))
            )
        )
    )

    (define (iter items)
        (cond
            ((null? items) items)
            ((object? (car items)) items)
	    ((quote? (car items))
		(set-car! items (check (car items) lst)))
	    ((pair? (car items))
                (iter (car items))
                (iter (cdr items)))
            (else
                (set-car! items (check (car items) lst))
                (iter (cdr items))
                )
            )
    ) 

    (iter (get 'parameters func))
    (iter (cadr (get 'code func)))
)

(define (main)
    (define env this)
    (define (iter expr)
         (if (not (eof?)) (begin (eval expr env) (iter (readExpr))))
         )
    (setPort (open (getElement ScamArgs 1) 'read))
    (iter (readExpr))
)
