(define (Stack)
    (cons nil 0)
)
(define (ssize stack)
    (cdr stack)
)
(define (push stack x)
    (cons (cons x (car stack)) (+ (cdr stack) 1))
)
(define (pop stack)
    (cons (cdr (car stack)) (- (cdr stack) 1))
)
(define (speek stack)
    (car (car stack))
)

(define (Queue)
    (cons nil 0)
)
(define (qsize queue)
    (cdr queue)
)
(define (enqueue queue x)
    (cons (append (car queue) (list x) ) (+ (cdr queue) 1))
)
(define (dequeue queue)
    (cons (cdr (car queue)) (- (cdr queue) 1))
)
(define (qpeek queue)
    (car (car queue))
)
(define (main)
	 (println (speek (pop (pop (push (push (push (Stack) 3) 2) 1)))))
)